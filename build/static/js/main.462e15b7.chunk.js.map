{"version":3,"sources":["slide-calculator/index.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","options","Object","classCallCheck","this","element","document","querySelector","width","height","ctx","getContext","onSelect","data","devicePixelRatio","window","style","concat","bottomLineHeight","offsetX","press","vx","scrollDistance","columnLen","length","columnWidth","Math","ceil","columnItemWidth","lineWidth","midWidth","arrowHeight","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","fillStyle","arrowLineWidth","arrowLineHeight","fill","drawTargetArrow","drawScale","scaleHeight","scaleItemHeight","maxcolumn","save","startX","translate","globalCompositeOperation","k","textAlign","font","index","fillText","selectIndex","j","self","startTime","addEventListener","e","Date","getTime","touch","targetTouches","pageX","preventDefault","scrollFlag","time","round","targetDistance","adjustDistance","speed","abs","_this","setInterval","clearRect","draw","restore","scrollMove","adjustPosition","bindEvent","App","state","activeIndex","innerWidth","setState","render","react_default","a","createElement","className","id","Component","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.462e15b7.chunk.js","sourcesContent":["class Calculator {\n  constructor(options) {\n    const element = document.querySelector(options.element);\n    this.element = element;\n    const width = options.width;\n    const height = options.height;\n    this.ctx = element.getContext('2d');\n    this.onSelect = options.onSelect;\n    this.data = options.data;\n    this.devicePixelRatio = window.devicePixelRatio;\n    element.style.width = `${width}px`;\n    element.style.height = `${height}px`;\n    this.width = width * this.devicePixelRatio;\n    this.height = height * this.devicePixelRatio; \n\n    element.width = this.width;\n    element.height = this.height; \n    this.bottomLineHeight = this.height * 0.81;\n    this.offsetX = 0;\n\n    this.press = false;\n    this.vx = 0;\n    this.scrollDistance = 0;\n    this.columnLen = options.data.length - 1;\n    this.columnWidth = Math.ceil(this.width / 5);\n    this.columnItemWidth = this.columnWidth / 10;\n    this.ctx.lineWidth = 1 * this.devicePixelRatio;\n  }\n\n  drawTargetArrow() {\n    const midWidth = this.width / 2;\n    const arrowHeight = this.height * 0.3;\n\n    this.ctx.strokeStyle = 'rgb(222, 222, 222)'\n    this.ctx.beginPath();\n    this.ctx.moveTo(0, this.bottomLineHeight);\n    this.ctx.lineTo(this.width, this.bottomLineHeight);\n    this.ctx.closePath();\n    this.ctx.stroke();\n\n    this.ctx.strokeStyle = 'rgb(73, 128, 219)'\n    this.ctx.beginPath();\n    this.ctx.moveTo(midWidth, this.bottomLineHeight); \n    this.ctx.lineTo(midWidth, arrowHeight);\n    this.ctx.closePath();\n    this.ctx.stroke();\n\n    this.ctx.fillStyle = 'rgb(73, 128, 219)'\n    const arrowLineWidth = 10;\n    const arrowLineHeight = arrowLineWidth * 0.70711;\n    this.ctx.beginPath();\n    this.ctx.moveTo(midWidth - arrowLineWidth/ 2, arrowHeight);\n    this.ctx.lineTo(midWidth + arrowLineHeight/ 2, arrowHeight);\n    this.ctx.lineTo(midWidth, arrowHeight - arrowLineHeight);\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n\n  draw() {\n    // 刻画指向标尺\n    this.drawTargetArrow();\n\n    // 刻画刻度\n    this.drawScale();\n  } \n\n  drawScale() {\n    const midWidth = this.width / 2; \n    const scaleHeight = this.width * 0.0267;\n    const scaleItemHeight = this.width * 0.0133;\n    const maxcolumn = this.columnWidth * this.columnLen;\n    \n    this.ctx.save();\n    const startX = this.offsetX;\n    this.ctx.translate(midWidth, this.bottomLineHeight)\n    this.ctx.strokeStyle = 'rgb(222, 222, 222)';\n    this.ctx.globalCompositeOperation = 'destination-over';\n    for(let k = startX ; k <= maxcolumn + startX; k = k + this.columnWidth) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(k, 0);\n      this.ctx.lineTo(k, 0 - scaleHeight);\n      this.ctx.closePath();\n      this.ctx.stroke();\n      this.ctx.textAlign = 'center';\n      this.ctx.font = `${this.width * 0.033}px sans-serif`;\n      this.ctx.fillStyle = 'rgb(222, 222, 222)';\n      const index =Math.ceil((-startX + k)/this.columnWidth);\n      const data = this.data[index];\n      this.ctx.fillText(data, k, -scaleHeight - this.width * 0.0133);\n\n      if(k === 0) {\n        const selectIndex = (-startX + k)/this.columnWidth \n        this.onSelect && this.onSelect(this.data[selectIndex])\n      }\n\n      for(let j = k; j < k + this.columnWidth; j = j + this.columnItemWidth) {\n        if(-startX + j <= maxcolumn) {\n          this.ctx.beginPath();\n          this.ctx.moveTo(j, 0);\n          this.ctx.lineTo(j, 0 - scaleItemHeight);\n          this.ctx.closePath();\n          this.ctx.stroke();\n        }\n      }\n    }\n  }\n\n  // 绑定触摸事件\n  bindEvent() {\n    let startX = 0;\n    const self = this;\n    let startTime = null;\n    let endTime = null;\n    this.element.addEventListener('touchstart', function(e) {\n      self.press = true;\n      startTime = new Date().getTime();\n      self.scrollDistance = 0;\n      self.vx = 0;\n      const touch = e.targetTouches[0];\n      startX = touch.pageX;\n      e.preventDefault();\n    })\n    this.element.addEventListener('touchmove', function(e) {\n      self.press = true;\n      const touch = e.targetTouches[0];\n      let offsetX = touch.pageX - startX;\n      self.offsetX = self.offsetX + offsetX * self.devicePixelRatio;\n      \n      if(!self.scrollFlag) {\n        if(offsetX > 0 && self.offsetX > self.width * 0.1) {\n          self.offsetX  = self.width * 0.1;\n        } else if (offsetX < 0 && self.offsetX < -self.columnWidth * self.columnLen - self.width * 0.1) {\n          self.offsetX  = -self.columnWidth * self.columnLen - self.width * 0.1;\n        }\n      }\n       \n\n      startX = touch.pageX;\n      self.vx = offsetX;\n      e.preventDefault();\n    })\n    this.element.addEventListener('touchend', function(e) {\n      self.press = false;\n      endTime = new Date().getTime();\n      const time = endTime - startTime;\n      \n      if(time < 300) {\n        if(self.vx < - 0) {\n          self.scrollDistance = - self.columnWidth * self.columnLen * 20 * self.devicePixelRatio / time;\n          if(self.scrollDistance + self.offsetX <  -self.columnWidth * self.columnLen - self.width * 0.1) {\n            self.scrollDistance = -self.columnWidth * self.columnLen - self.width * 0.1 - self.offsetX;\n          }\n        } else if (self.vx > 0) {\n          self.scrollDistance = self.columnWidth * self.columnLen * 20 * self.devicePixelRatio / time;\n          if(self.scrollDistance + self.offsetX > self.width * 0.1) {\n            self.scrollDistance = self.width * 0.1 - self.offsetX;\n          }\n        }\n        self.scrollFlag = true;\n      } else {\n        self.scrollFlag = false;\n      }\n\n      e.preventDefault();\n    })\n  }\n\n  // 滑动停止后，调整回到合适的位置\n  adjustPosition() {\n    const selectIndex = Math.round(-this.offsetX / this.columnWidth);\n    const targetDistance = selectIndex * this.columnWidth;\n    let adjustDistance = null;\n\n    if(selectIndex < 0) {\n      adjustDistance = Math.abs(-this.offsetX - 0);\n      let speed = adjustDistance / 5;\n      this.offsetX = this.offsetX - speed;\n    } else if (selectIndex > this.columnLen) {\n      adjustDistance = Math.abs(-this.offsetX - this.columnWidth * this.columnLen);\n      let speed = adjustDistance / 5;\n      this.offsetX = this.offsetX + speed;\n    } else{\n      adjustDistance = Math.abs(-this.offsetX -  targetDistance);\n      let speed = adjustDistance / 5;\n      targetDistance > -this.offsetX ? (this.offsetX = this.offsetX - speed) : (this.offsetX = this.offsetX + speed); \n    }\n\n    if(adjustDistance < 1) {\n      this.offsetX = -selectIndex * this.columnWidth;\n      this.press = true;\n    }\n  }\n\n  scrollMove() {\n    let speed = this.scrollDistance / 10;\n    this.scrollDistance = this.scrollDistance - speed;\n    this.offsetX = this.offsetX + speed;\n\n    if(Math.abs(this.scrollDistance) < 1) {\n      this.scrollFlag = false;\n    }\n  }\n\n  render() {\n    setInterval(() => {\n      this.ctx.clearRect(0,0, this.width, this.height);\n      this.draw(); \n      this.ctx.restore();\n      this.scrollFlag && this.scrollMove();\n      !this.press && !this.scrollFlag && this.adjustPosition();\n    }, 1000 / 60);\n    this.bindEvent();\n  }\n}\n\nexport default Calculator;","import React, { Component } from 'react';\nimport './App.css';\nimport Calculator from './slide-calculator/index';\n\nclass App extends Component {\n\n  state = {\n    activeIndex: 0\n  }\n\n  componentDidMount() {\n    const self = this;\n    const options = {\n      width: window.innerWidth,\n      height: 100,\n      element: '#calculator',\n      data: [0, 10, 25, 33, 40, 55, 63, 78, 89, 99 ,109],\n      onSelect(data) {\n        self.setState({\n          activeIndex: data\n        })\n      }\n    }\n\n    const cal = new Calculator(options);\n    cal.render(); \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"index-tips\"><span>activeIndex: {this.state.activeIndex}</span></div>\n        <canvas id=\"calculator\"></canvas> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}